{"version":3,"file":"static/js/186.8ecd7ef7.chunk.js","mappings":"yNAkCA,UA9BA,WACE,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAEMC,GAAoBC,EAAAA,EAAAA,cAAW,iBAAC,6GAEXC,EAAAA,EAAAA,IAAA,iBAAoBP,EAApB,aAFW,OAE5BQ,EAF4B,OAGlCJ,EAAWI,EAASC,KAAKC,SAHS,gDAKlCC,QAAQC,IAAR,MALkC,yDAOnC,CAACZ,IAMJ,OAJAa,EAAAA,EAAAA,YAAU,WACRR,GACD,GAAE,CAACA,KAGF,4BACE,oCACCF,EAAQW,KAAI,SAAAC,GAAM,OACjB,4BACE,wBAAKA,EAAOC,UACZ,uBAAID,EAAOE,YAFHF,EAAOG,GADA,MAQxB,C","sources":["components/Reviews/Reviews.jsx"],"sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\n\nfunction Reviews() {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  const fetchMovieReviews = useCallback(async () => {\n    try {\n      const response = await axios.get(`/movie/${movieId}/reviews`);\n      setReviews(response.data.results);\n    } catch (error) {\n      console.log(error);\n    }\n  }, [movieId]);\n\n  useEffect(() => {\n    fetchMovieReviews();\n  }, [fetchMovieReviews]);\n\n  return (\n    <div>\n      <h1>Reviews</h1>\n      {reviews.map(review => (\n        <div key={review.id}>\n          <h3>{review.author}</h3>\n          <p>{review.content}</p>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default Reviews;\n"],"names":["movieId","useParams","useState","reviews","setReviews","fetchMovieReviews","useCallback","axios","response","data","results","console","log","useEffect","map","review","author","content","id"],"sourceRoot":""}