{"version":3,"file":"static/js/888.a97e97e4.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/MovieDetails/MovieDetails.module.css?9ca9","components/MovieDetails/MovieDetails.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movieDetails\":\"MovieDetails_movieDetails__EqwEX\",\"posterContainer\":\"MovieDetails_posterContainer__Z1yht\",\"poster\":\"MovieDetails_poster__Gw9Qy\",\"info\":\"MovieDetails_info__0TKY1\",\"title\":\"MovieDetails_title__RBndM\",\"overview\":\"MovieDetails_overview__EVogb\",\"links\":\"MovieDetails_links__WB7Lu\",\"castTitle\":\"MovieDetails_castTitle__l07mY\",\"actorImage\":\"MovieDetails_actorImage__vSq0M\",\"actorDetails\":\"MovieDetails_actorDetails__w31aR\",\"actorName\":\"MovieDetails_actorName__9mafz\",\"actorCharacter\":\"MovieDetails_actorCharacter__EL8-I\"};","import React, { useEffect, useState, useCallback } from 'react';\nimport { useParams, Outlet, Link, useLocation } from 'react-router-dom';\nimport axios from 'axios';\nimport { API_KEY } from 'utils/api';\nimport styles from './MovieDetails.module.css';\n\n//wyÅ›wietlenie informacji o wybranym filmie\n\nfunction MovieDetails() {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const [cast, setCast] = useState([]);\n  const [reviews, setReviews] = useState([]);\n  const location = useLocation();\n  const isCastClicked = location.pathname.includes('/cast');\n  const isReviewsClicked = location.pathname.includes('/reviews');\n\n  const fetchMovieDetails = useCallback(async () => {\n    try {\n      const response = await axios.get(`/movie/${movieId}`, {\n        params: {\n          api_key: API_KEY,\n        },\n      });\n      setMovie(response.data);\n    } catch (error) {\n      console.log(error);\n    }\n  }, [movieId]);\n\n  const fetchCastDetails = useCallback(async () => {\n    try {\n      const response = await axios.get(`/movie/${movieId}/credits`, {\n        params: {\n          api_key: API_KEY,\n        },\n      });\n      setCast(response.data.cast[0]);\n    } catch (error) {\n      console.log(error);\n    }\n  }, [movieId]);\n\n  // const fetchMovieCredits = useCallback(async () => {\n  //   try {\n  //     const response = await axios.get(`/movie/${movieId}/credits`, {\n  //       params: {\n  //         api_key: API_KEY,\n  //       },\n  //     });\n  //     setCast(response.data.cast);\n  //   } catch (error) {\n  //     console.log(error);\n  //   }\n  // }, [movieId]);\n\n  const fetchMovieReviews = useCallback(async () => {\n    try {\n      const response = await axios.get(`/movie/${movieId}/reviews`, {\n        params: {\n          api_key: API_KEY,\n        },\n      });\n      setReviews(response.data.results);\n    } catch (error) {\n      console.log(error);\n    }\n  }, [movieId]);\n\n  useEffect(() => {\n    fetchMovieDetails();\n    fetchCastDetails();\n    // fetchMovieCredits();\n    fetchMovieReviews();\n  }, [fetchMovieDetails, fetchCastDetails, fetchMovieReviews]);\n\n  if (!movie) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div className={styles.movieDetails}>\n      <div className={styles.posterContainer}>\n        <img\n          className={styles.poster}\n          src={`https://image.tmdb.org/t/p/w200${movie.poster_path}`}\n          alt={movie.title}\n        />\n\n        <div className={styles.info}>\n          <h1 className={styles.title}>{movie.title}</h1>\n          <p className={styles.overview}>{movie.overview}</p>\n\n          <div className={styles.links}>\n            <Link\n              to={`/movies/${movieId}/cast`}\n              className={isCastClicked ? styles.activeLink : ''}\n            >\n              Cast: View Cast\n            </Link>\n            <Link\n              to={`/movies/${movieId}/reviews`}\n              className={isReviewsClicked ? styles.activeLink : ''}\n            >\n              Reviews: View Reviews\n            </Link>\n          </div>\n        </div>\n      </div>\n\n      <Outlet />\n\n      {isCastClicked && cast && (\n        <div className={styles.cast}>\n          <h2 className={styles.castTitle}>Cast</h2>\n          <div className={styles.actor}>\n            <img\n              className={styles.actorImage}\n              src={`https://image.tmdb.org/t/p/w200${cast.profile_path}`}\n              alt={cast.name}\n            />\n            <div className={styles.actorDetails}>\n              <h3 className={styles.actorName}>{cast.name}</h3>\n              <p className={styles.actorCharacter}>{cast.character}</p>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {isReviewsClicked && reviews.length > 0 && (\n        <div className={styles.reviews}>\n          <h2 className={styles.reviewsTitle}>Reviews</h2>\n          {reviews.map(review => (\n            <div key={review.id} className={styles.reviewItem}>\n              <h3 className={styles.reviewAuthor}>{review.author}</h3>\n              <p className={styles.reviewContent}>{review.content}</p>\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default MovieDetails;\n"],"names":["movieId","useParams","useState","movie","setMovie","cast","setCast","reviews","setReviews","location","useLocation","isCastClicked","pathname","includes","isReviewsClicked","fetchMovieDetails","useCallback","axios","params","api_key","API_KEY","response","data","console","log","fetchCastDetails","fetchMovieReviews","results","useEffect","className","styles","src","poster_path","alt","title","overview","to","profile_path","name","character","length","map","review","author","content","id"],"sourceRoot":""}